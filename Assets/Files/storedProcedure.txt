
6)

exec spCartToOrder @userId = 6 ,@addressId = 21 ,@generatedUuid = 'assad'

drop procedure sample1



create procedure spCartToOrder
	@userId integer,
	@addressId integer,
	@generatedUuid varchar(150)

AS 
DECLARE
	@productId int,
	@quantity int,
	@price decimal(10,2),
	@tax decimal(10,2),
	@totalPrice decimal(10,2),
	@totalTax decimal(10,2)

DECLARE cursor1 cursor for
		select
			tc.fldProductId,
			tc.fldQuantity,
			 tp.fldPrice,
			 tp.fldTax
	from 
		tblCart as tc
	INNER JOIN
		tblProduct as tp
	ON 
		tc.fldProductId = tp.fldProduct_ID
	Where 
		fldUserId = @userId
	Order by fldProduct_ID

	select
		 @totalPrice = SUM
		(
			 tc.fldQuantity * tp.fldPrice
		),
		@totalTax = SUM
		(
			 tc.fldQuantity * tp.fldTax
		) 
	from 
		tblCart as tc
	INNER JOIN
		tblProduct as tp
	ON 
		tc.fldProductId = tp.fldProduct_ID
	Where 
		fldUserId = @userId

	insert into
		tblOrder
		(
			fldOrder_ID,
			fldUserId,
			fldAddressId,
			fldTotalPrice,
			fldTotalTax,
			fldCardPart
		)
	Values
		(
			@generatedUuid,
			@userId,
			@addressId,
			@totalPrice,
			@totalTax,
			'3456'
		)


OPEN cursor1

Fetch next from cursor1 into @productId,@quantity,@price,@tax

  WHILE @@FETCH_STATUS = 0
   BEGIN

	insert into
		tblOrderedItems
		(
			fldOrderId,
			fldProductId,
			fldQuantity,
			fldUnitPrice,
			fldUnitTax
		)
	values 
		(
			@generatedUuid,
			@productId,
			@qty,
			@price,
			@tax
		)

Fetch next from cursor1 into @productId,@quantity,@price,@tax
	  END

	  close cursor1
	  deallocate cursor1

	delete from tblCart where fldUserId = @userId

GO


